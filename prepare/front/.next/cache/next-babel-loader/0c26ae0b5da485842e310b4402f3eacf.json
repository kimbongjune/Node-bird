{"ast":null,"code":"import { all, fork, call, put, take, takeEvery, takeLatest, throttle, delay } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, FOLLOW_FAILURE, FOLLOW_REQUEST, LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_SUCCESS } from \"../reducers/user\";\nimport { UNFOLLOW_REQUEST, FOLLOW_SUCCESS, UNFOLLOW_FAILURE, LOAD_USER_SUCCESS, CHANGE_NICKNAME_SUCCESS } from './../reducers/user';\n\nfunction logInAPI(data) {\n  return axios.post(\"/user/login\", data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/user/logout\");\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post(\"/user\", data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI(data) {\n  return axios.post(\"/api/follow\", data);\n}\n\nfunction* follow(action) {\n  try {\n    const result = yield call(followAPI, action.data);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unFollowAPI(data) {\n  return axios.post(\"/api/unFollow\", data);\n}\n\nfunction* unFollow(action) {\n  try {\n    //const result = yield call(unFollowAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      //data : result.data,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadUserAPI() {\n  return axios.get(\"/user\");\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch(\"/user/nickname\", {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadUser() {\n  yield takeEvery(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction* watchFollow() {\n  yield takeEvery(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnFollow() {\n  yield takeEvery(UNFOLLOW_REQUEST, unFollow);\n}\n\nfunction* watchLogin() {\n  yield takeEvery(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogout() {\n  yield takeEvery(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchChangeNickname() {\n  yield takeEvery(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchChangeNickname), fork(watchLoadUser), fork(watchFollow), fork(watchUnFollow), fork(watchLogin), fork(watchLogout), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["D:/nodeBird/prepare/front/sagas/user.js"],"names":["all","fork","call","put","take","takeEvery","takeLatest","throttle","delay","axios","CHANGE_NICKNAME_FAILURE","CHANGE_NICKNAME_REQUEST","FOLLOW_FAILURE","FOLLOW_REQUEST","LOAD_USER_FAILURE","LOAD_USER_REQUEST","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","UNFOLLOW_SUCCESS","UNFOLLOW_REQUEST","FOLLOW_SUCCESS","UNFOLLOW_FAILURE","LOAD_USER_SUCCESS","CHANGE_NICKNAME_SUCCESS","logInAPI","data","post","logIn","action","result","type","err","error","response","logOutAPI","logOut","console","signUpAPI","signUp","log","followAPI","follow","unFollowAPI","unFollow","loadUserAPI","get","loadUser","changeNicknameAPI","patch","nickname","changeNickname","watchLoadUser","watchFollow","watchUnFollow","watchLogin","watchLogout","watchSignUp","watchChangeNickname","userSaga"],"mappings":"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","sourcesContent":["import {all, fork, call, put, take, takeEvery, takeLatest, throttle, delay} from \"redux-saga/effects\"\r\nimport axios from \"axios\";\r\nimport { CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, FOLLOW_FAILURE, FOLLOW_REQUEST, LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_SUCCESS } from \"../reducers/user\";\r\nimport { UNFOLLOW_REQUEST, FOLLOW_SUCCESS, UNFOLLOW_FAILURE, LOAD_USER_SUCCESS, CHANGE_NICKNAME_SUCCESS } from './../reducers/user';\r\n\r\n\r\nfunction logInAPI(data){\r\n    return axios.post(\"/user/login\", data);\r\n}\r\n\r\nfunction* logIn(action){\r\n    try {\r\n        const result = yield call(logInAPI, action.data);\r\n        yield put({\r\n            type : LOG_IN_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : LOG_IN_FAILURE,\r\n            error : err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction logOutAPI(){\r\n    return axios.post(\"/user/logout\");\r\n}\r\n\r\nfunction* logOut(){\r\n    try {\r\n        yield call(logOutAPI);\r\n        yield put({\r\n            type : LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type : LOG_OUT_FAILURE,\r\n            error : err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction signUpAPI(data){\r\n    return axios.post(\"/user\", data);\r\n}\r\n\r\nfunction* signUp(action){\r\n    try {\r\n        const result = yield call(signUpAPI, action.data);\r\n        console.log(result);\r\n        yield put({\r\n            type : SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : SIGN_UP_FAILURE,\r\n            error : err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction followAPI(data){\r\n    return axios.post(\"/api/follow\", data);\r\n}\r\n\r\nfunction* follow(action){\r\n    try {\r\n        const result = yield call(followAPI, action.data);\r\n        yield put({\r\n            type : FOLLOW_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : FOLLOW_FAILURE,\r\n            error : err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction unFollowAPI(data){\r\n    return axios.post(\"/api/unFollow\", data);\r\n}\r\n\r\nfunction* unFollow(action){\r\n    try {\r\n        //const result = yield call(unFollowAPI, action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type : UNFOLLOW_SUCCESS,\r\n            //data : result.data,\r\n            data : action.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : UNFOLLOW_FAILURE,\r\n            error : err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadUserAPI(){\r\n    return axios.get(\"/user\");\r\n}\r\n\r\nfunction* loadUser(action){\r\n    try {\r\n        const result = yield call(loadUserAPI, action.data);\r\n        yield put({\r\n            type : LOAD_USER_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : LOAD_USER_FAILURE,\r\n            error : err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction changeNicknameAPI(data){\r\n    return axios.patch(\"/user/nickname\",{nickname : data});\r\n}\r\n\r\nfunction* changeNickname(action){\r\n    try {\r\n        const result = yield call(changeNicknameAPI, action.data);\r\n        yield put({\r\n            type : CHANGE_NICKNAME_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : CHANGE_NICKNAME_FAILURE,\r\n            error : err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction* watchLoadUser(){\r\n    yield takeEvery(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nfunction* watchFollow(){\r\n    yield takeEvery(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnFollow(){\r\n    yield takeEvery(UNFOLLOW_REQUEST, unFollow);\r\n}\r\n\r\nfunction* watchLogin(){\r\n    yield takeEvery(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogout(){\r\n    yield takeEvery(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp(){\r\n    yield takeEvery(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nfunction* watchChangeNickname(){\r\n    yield takeEvery(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\nexport default function* userSaga(){\r\n\r\n    yield all([\r\n        fork(watchChangeNickname),\r\n        fork(watchLoadUser),\r\n        fork(watchFollow),\r\n        fork(watchUnFollow),\r\n        fork(watchLogin),\r\n        fork(watchLogout),\r\n        fork(watchSignUp),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}