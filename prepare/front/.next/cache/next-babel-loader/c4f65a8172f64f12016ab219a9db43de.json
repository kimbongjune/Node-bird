{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nimport user from \"./user\";\nimport post from \"./post\";\nimport { combineReducers } from 'redux';\nvar rootReducer = combineReducers({\n  index: function index() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    switch (action.type) {\n      case HYDRATE:\n        return _objectSpread(_objectSpread({}, state), action.payload);\n\n      default:\n        return state;\n    }\n  },\n  user: user,\n  post: post\n});\nexport default rootReducer;","map":{"version":3,"sources":["D:/nodeBird/prepare/front/reducers/index.js"],"names":["HYDRATE","user","post","combineReducers","rootReducer","index","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,eAAT,QAAgC,OAAhC;AAGA,IAAMC,WAAW,GAAGD,eAAe,CAAC;AAChCE,EAAAA,KAAK,EAAE,iBAAuB;AAAA,QAAtBC,KAAsB,uEAAd,EAAc;AAAA,QAAVC,MAAU;;AAC9B,YAAOA,MAAM,CAACC,IAAd;AACI,WAAKR,OAAL;AACI,+CACOM,KADP,GAEOC,MAAM,CAACE,OAFd;;AAIA;AACI,eAAOH,KAAP;AAPZ;AASC,GAX+B;AAY5BL,EAAAA,IAAI,EAAJA,IAZ4B;AAa5BC,EAAAA,IAAI,EAAJA;AAb4B,CAAD,CAAnC;AAgBA,eAAeE,WAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\r\nimport user from \"./user\";\r\nimport post from \"./post\";\r\nimport { combineReducers } from 'redux';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    index :(state = {}, action) =>{\r\n    switch(action.type){\r\n        case HYDRATE:\r\n            return{\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n            default :\r\n                return state;\r\n        }\r\n    },\r\n        user,\r\n        post,\r\n});\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}