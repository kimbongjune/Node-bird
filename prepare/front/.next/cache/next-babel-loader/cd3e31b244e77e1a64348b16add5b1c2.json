{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _initialState;\n\nimport shortId from \"shortid\";\nimport produce from \"immer\";\nimport faker from \"faker\";\nexport var initialState = (_initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePost: true,\n  loadPostLoading: false,\n  loadPostDone: false\n}, _defineProperty(_initialState, \"hasMorePost\", true), _defineProperty(_initialState, \"loadPostLoading\", false), _defineProperty(_initialState, \"loadPostDone\", false), _defineProperty(_initialState, \"hasMorePost\", true), _defineProperty(_initialState, \"likePostLoading\", false), _defineProperty(_initialState, \"likePostDone\", false), _defineProperty(_initialState, \"likePostError\", null), _defineProperty(_initialState, \"unlikePostLoading\", false), _defineProperty(_initialState, \"unlikePostDone\", false), _defineProperty(_initialState, \"unlikePostError\", null), _defineProperty(_initialState, \"loadPostLoading\", false), _defineProperty(_initialState, \"loadPostDone\", false), _defineProperty(_initialState, \"loadPostError\", null), _defineProperty(_initialState, \"addPostLoading\", false), _defineProperty(_initialState, \"addPostDone\", false), _defineProperty(_initialState, \"addPostError\", null), _defineProperty(_initialState, \"removePostLoading\", false), _defineProperty(_initialState, \"removePostDone\", false), _defineProperty(_initialState, \"removePostError\", null), _defineProperty(_initialState, \"addCommentLoading\", false), _defineProperty(_initialState, \"addCommentDone\", false), _defineProperty(_initialState, \"addCommentError\", null), _initialState);\nexport var LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\nexport var LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\nexport var LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\nexport var UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\nexport var UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\nexport var UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\nexport var LOAD_POST_REQUEST = \"LOAD_POST_REQUEST\";\nexport var LOAD_POST_SUCCESS = \"LOAD_POST_SUCCESS\";\nexport var LOAD_POST_FAILURE = \"LOAD_POST_FAILURE\";\nexport var ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport var REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport var REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport var REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport var ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport var ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport var ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n\n      case LIKE_POST_SUCCESS:\n        draft.likePostLoading = false;\n        draft.likePostDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePost = false;\n        break;\n\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n\n      case UNLIKE_POST_REQUEST:\n        draft.unlikePostLoading = true;\n        draft.unlikePostDone = false;\n        draft.unlikePostError = null;\n        break;\n\n      case UNLIKE_POST_SUCCESS:\n        draft.unlikePostLoading = false;\n        draft.unlikePostDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePost = false;\n        break;\n\n      case UNLIKE_POST_FAILURE:\n        draft.unlikePostLoading = false;\n        draft.unlikePostError = action.error;\n        break;\n\n      case LOAD_POST_REQUEST:\n        draft.loadPostLoading = true;\n        draft.loadPostDone = false;\n        draft.loadPostError = null;\n        break;\n\n      case LOAD_POST_SUCCESS:\n        draft.loadPostLoading = false;\n        draft.loadPostDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePost = false;\n        break;\n\n      case LOAD_POST_FAILURE:\n        draft.loadPostLoading = false;\n        draft.loadPostError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (V) {\n            return V.id === action.data.PostId;\n          });\n          post.Comments.unshift(action.data);\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break; // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n          // const post = {...state.mainPosts[postIndex]};\n          // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n          // const mainPosts = [...state.mainPosts];\n          // mainPosts[postIndex] = post;\n          // return{\n          //     ...state,\n          //     mainPosts,\n          //     addCommentLoading : false,\n          //     addCommentDone : true,\n          // };\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/nodeBird/prepare/front/reducers/post.js"],"names":["shortId","produce","faker","initialState","mainPosts","imagePaths","hasMorePost","loadPostLoading","loadPostDone","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","reducer","state","action","draft","likePostLoading","likePostDone","likePostError","concat","error","unlikePostLoading","unlikePostDone","unlikePostError","loadPostError","addPostLoading","addPostDone","addPostError","unshift","removePostLoading","removePostDone","removePostError","filter","v","id","addCommentLoading","addCommentDone","addCommentError","post","find","V","PostId","Comments"],"mappings":"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","sourcesContent":["import shortId from \"shortid\";\r\nimport produce from \"immer\";\r\nimport faker from \"faker\";\r\n\r\nexport const initialState = {\r\n    mainPosts : [],\r\n    imagePaths :[],\r\n    hasMorePost : true,\r\n    loadPostLoading : false,\r\n    loadPostDone : false,\r\n    hasMorePost : true,\r\n    loadPostLoading : false,\r\n    loadPostDone : false,\r\n    hasMorePost : true,\r\n\r\n    likePostLoading : false,\r\n    likePostDone : false,\r\n    likePostError : null,\r\n\r\n    unlikePostLoading : false,\r\n    unlikePostDone : false,\r\n    unlikePostError : null,\r\n\r\n    loadPostLoading : false,\r\n    loadPostDone : false,\r\n    loadPostError : null,\r\n    addPostLoading : false,\r\n    addPostDone : false,\r\n    addPostError : null,\r\n    removePostLoading : false,\r\n    removePostDone : false,\r\n    removePostError : null,\r\n    addCommentLoading : false,\r\n    addCommentDone : false,\r\n    addCommentError : null,\r\n};\r\n\r\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\r\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\r\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\r\n\r\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\r\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\r\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\r\n\r\nexport const LOAD_POST_REQUEST = \"LOAD_POST_REQUEST\";\r\nexport const LOAD_POST_SUCCESS = \"LOAD_POST_SUCCESS\";\r\nexport const LOAD_POST_FAILURE = \"LOAD_POST_FAILURE\";\r\n\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\r\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\r\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\r\n\r\n\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\r\n\r\n\r\nexport const addPost = (data) =>({\r\n    type : ADD_POST_REQUEST,\r\n    data,\r\n});\r\n\r\nexport const addComment = (data) =>({\r\n    type : ADD_COMMENT_REQUEST,\r\n    data,\r\n});\r\n\r\nconst reducer = (state = initialState, action) =>{\r\n    return produce(state, (draft) =>{\r\n        switch(action.type){\r\n            case LIKE_POST_REQUEST:\r\n                draft.likePostLoading = true;\r\n                draft.likePostDone = false;\r\n                draft.likePostError = null;\r\n                break;\r\n            case LIKE_POST_SUCCESS:\r\n                draft.likePostLoading = false;\r\n                draft.likePostDone = true;\r\n                draft.mainPosts = action.data.concat(draft.mainPosts);\r\n                draft.hasMorePost = false;\r\n                break;\r\n            case LIKE_POST_FAILURE:\r\n                draft.likePostLoading = false;\r\n                draft.likePostError = action.error;\r\n                break;\r\n            case UNLIKE_POST_REQUEST:\r\n                draft.unlikePostLoading = true;\r\n                draft.unlikePostDone = false;\r\n                draft.unlikePostError = null;\r\n                break;\r\n            case UNLIKE_POST_SUCCESS:\r\n                draft.unlikePostLoading = false;\r\n                draft.unlikePostDone = true;\r\n                draft.mainPosts = action.data.concat(draft.mainPosts);\r\n                draft.hasMorePost = false;\r\n                break;\r\n            case UNLIKE_POST_FAILURE:\r\n                draft.unlikePostLoading = false;\r\n                draft.unlikePostError = action.error;\r\n                break;\r\n            case LOAD_POST_REQUEST:\r\n                draft.loadPostLoading = true;\r\n                draft.loadPostDone = false;\r\n                draft.loadPostError = null;\r\n                break;\r\n            case LOAD_POST_SUCCESS:\r\n                draft.loadPostLoading = false;\r\n                draft.loadPostDone = true;\r\n                draft.mainPosts = action.data.concat(draft.mainPosts);\r\n                draft.hasMorePost = false;\r\n                break;\r\n            case LOAD_POST_FAILURE:\r\n                draft.loadPostLoading = false;\r\n                draft.loadPostError = action.error;\r\n                break;\r\n            case ADD_POST_REQUEST:\r\n                draft.addPostLoading = true;\r\n                draft.addPostDone = false;\r\n                draft.addPostError = null;\r\n                break;\r\n            case ADD_POST_SUCCESS:\r\n                draft.addPostLoading = false;\r\n                draft.addPostDone = true;\r\n                draft.mainPosts.unshift(action.data);\r\n                break;\r\n            case ADD_POST_FAILURE:\r\n                draft.addPostLoading = false;\r\n                draft.addPostError = action.error;\r\n                break;\r\n            case REMOVE_POST_REQUEST:\r\n                draft.removePostLoading = true;\r\n                draft.removePostDone = false;\r\n                draft.removePostError = null;\r\n                break;\r\n            case REMOVE_POST_SUCCESS:\r\n                draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\r\n                draft.removePostLoading = false;\r\n                draft.removePostDone = true;\r\n                break;\r\n            case REMOVE_POST_FAILURE:\r\n                draft.removePostLoading = false;\r\n                draft.removePostError = action.error;\r\n                break;\r\n            case ADD_COMMENT_REQUEST:\r\n                draft.addCommentLoading = true;\r\n                draft.addCommentDone = false;\r\n                draft.addCommentError = null;\r\n                break;\r\n            case ADD_COMMENT_SUCCESS:{\r\n                const post = draft.mainPosts.find((V) => V.id === action.data.PostId);\r\n                post.Comments.unshift(action.data);\r\n                draft.addCommentLoading = false;\r\n                draft.addCommentDone = true;\r\n                break;\r\n                // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\r\n                // const post = {...state.mainPosts[postIndex]};\r\n                // post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n                // const mainPosts = [...state.mainPosts];\r\n                // mainPosts[postIndex] = post;\r\n                // return{\r\n                //     ...state,\r\n                //     mainPosts,\r\n                //     addCommentLoading : false,\r\n                //     addCommentDone : true,\r\n                // };\r\n            }\r\n            case ADD_COMMENT_FAILURE:\r\n                draft.addCommentLoading = false;\r\n                draft.addCommentError = action.error;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    });\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}