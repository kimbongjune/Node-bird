{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport shortId from \"shortid\";\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"kim\"\n    },\n    content: \"첫 번째 게시글 #해시태그 #익스프레스\",\n    Images: [{\n      id: shortId.generate(),\n      src: \"https://scribemedia.com/wp-content/uploads/2018/11/0-Should-You-Write-a-Book-700x406.jpg\"\n    }, {\n      id: shortId.generate(),\n      src: \"https://t1.daumcdn.net/cfile/tistory/24283C3858F778CA2E\"\n    }, {\n      id: shortId.generate(),\n      src: \"https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg\"\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: \"ree\"\n      },\n      content: \"123123123123\"\n    }, {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: \"park\"\n      },\n      content: \"content\"\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\n\nconst dummyPost = data => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: \"kim\"\n  },\n  Images: [],\n  Comments: []\n});\n\nconst dummyComment = data => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: \"kim\"\n  }\n});\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost(action.data), ...state.mainPosts],\n        addPostLoading: false,\n        addPostDone: true\n      });\n\n    case ADD_POST_FAILURE:\n      return {\n        addPostLoading: false,\n        addPostError: action.error\n      };\n\n    case REMOVE_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        removePostLoading: true,\n        removePostDone: false,\n        removePostError: null\n      });\n\n    case REMOVE_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: state.mainPosts.filter(v => v.id === action.data),\n        removePostLoading: false,\n        removePostDone: true\n      });\n\n    case REMOVE_POST_FAILURE:\n      return {\n        removePostLoading: false,\n        removePostError: action.error\n      };\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentDone: false,\n        addCommentError: null\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n\n        const post = _objectSpread({}, state.mainPosts[postIndex]);\n\n        post.Comments = [dummyComment(action.data.content), ...post.Comments];\n        const mainPosts = [...state.mainPosts];\n        mainPosts[postIndex] = post;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts,\n          addCommentLoading: false,\n          addCommentDone: true\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      return {\n        addCommentLoading: false,\n        addCommentError: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/nodeBird/prepare/front/reducers/post.js"],"names":["shortId","initialState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","dummyComment","reducer","state","action","error","filter","v","postIndex","findIndex","postId","post"],"mappings":"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","sourcesContent":["import shortId from \"shortid\";\r\n\r\nexport const initialState = {\r\n    mainPosts : [{\r\n        id:1,\r\n        User :{\r\n            id:1,\r\n            nickname:\"kim\",\r\n        },\r\n        content:\"첫 번째 게시글 #해시태그 #익스프레스\",\r\n        Images : [\r\n            {\r\n                id : shortId.generate(),\r\n                src : \"https://scribemedia.com/wp-content/uploads/2018/11/0-Should-You-Write-a-Book-700x406.jpg\",\r\n            },{\r\n                id : shortId.generate(),\r\n                src : \"https://t1.daumcdn.net/cfile/tistory/24283C3858F778CA2E\",\r\n            },{\r\n                id : shortId.generate(),\r\n                src : \"https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg\",\r\n            }],\r\n        Comments :[{\r\n            id : shortId.generate(),\r\n            User:{\r\n                id : shortId.generate(),\r\n                nickname : \"ree\",\r\n            },\r\n            content : \"123123123123\",\r\n        },{\r\n            id : shortId.generate(),\r\n            User:{\r\n                id : shortId.generate(),\r\n                nickname : \"park\",\r\n            },\r\n            content: \"content\",\r\n        }],\r\n    }],\r\n    imagePaths :[],\r\n    addPostLoading : false,\r\n    addPostDone : false,\r\n    addPostError : null,\r\n    removePostLoading : false,\r\n    removePostDone : false,\r\n    removePostError : null,\r\n    addCommentLoading : false,\r\n    addCommentDone : false,\r\n    addCommentError : null,\r\n}\r\n\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\r\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\r\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\r\n\r\n\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\r\n\r\n\r\nexport const addPost = (data) =>({\r\n    type : ADD_POST_REQUEST,\r\n    data,\r\n});\r\n\r\nexport const addComment = (data) =>({\r\n    type : ADD_COMMENT_REQUEST,\r\n    data,\r\n});\r\n\r\nconst dummyPost =(data) => ({\r\n    id : data.id,\r\n    content : data.content,\r\n    User :{\r\n        id:1,\r\n        nickname:\"kim\",\r\n    },\r\n    Images : [],\r\n    Comments : [],\r\n});\r\n\r\nconst dummyComment = (data) =>({\r\n    id : shortId.generate(),\r\n    content : data,\r\n    User : {\r\n        id : 1,\r\n        nickname : \"kim\",\r\n    },\r\n});\r\n\r\nconst reducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case ADD_POST_REQUEST:\r\n            return{\r\n                ...state,\r\n                addPostLoading : true,\r\n                addPostDone : false,\r\n                addPostError : null,\r\n            };\r\n        case ADD_POST_SUCCESS:\r\n            return{\r\n                ...state,\r\n                mainPosts:[dummyPost(action.data), ...state.mainPosts],\r\n                addPostLoading : false,\r\n                addPostDone : true,\r\n            };\r\n        case ADD_POST_FAILURE:\r\n            return{\r\n                addPostLoading : false,\r\n                addPostError : action.error,\r\n            };\r\n        case REMOVE_POST_REQUEST:\r\n            return{\r\n                ...state,\r\n                removePostLoading : true,\r\n                removePostDone : false,\r\n                removePostError : null,\r\n            };\r\n        case REMOVE_POST_SUCCESS:\r\n            return{\r\n                ...state,\r\n                mainPosts: state.mainPosts.filter((v) => v.id === action.data),\r\n                removePostLoading : false,\r\n                removePostDone : true,\r\n            };\r\n        case REMOVE_POST_FAILURE:\r\n            return{\r\n                removePostLoading : false,\r\n                removePostError : action.error,\r\n            };\r\n        case ADD_COMMENT_REQUEST:\r\n            return{\r\n                ...state,\r\n                addCommentLoading : true,\r\n                addCommentDone : false,\r\n                addCommentError : null,\r\n            };\r\n        case ADD_COMMENT_SUCCESS:{\r\n            const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\r\n            const post = {...state.mainPosts[postIndex]};\r\n            post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n            const mainPosts = [...state.mainPosts];\r\n            mainPosts[postIndex] = post;\r\n            return{\r\n                ...state,\r\n                mainPosts,\r\n                addCommentLoading : false,\r\n                addCommentDone : true,\r\n            };\r\n        }\r\n        case ADD_COMMENT_FAILURE:\r\n            return{\r\n                addCommentLoading : false,\r\n                addCommentError : action.error,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}