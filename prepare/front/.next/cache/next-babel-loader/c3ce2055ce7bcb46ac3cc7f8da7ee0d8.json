{"ast":null,"code":"var _jsxFileName = \"D:\\\\nodeBird\\\\prepare\\\\front\\\\components\\\\PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nimport { Button, Card, Popover, List, Comment } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport Avatar from \"antd/lib/avatar/avatar\";\nimport PostImages from \"./PostImages\";\nimport CommentForm from \"./CommentForm\";\nimport PostCardContent from \"./PostCardContent\";\nimport { REMOVE_POST_REQUEST } from './../reducers/post';\nimport FollowButton from \"./FollowButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      removePostLoading = _useSelector.removePostLoading;\n\n  var _useState2 = useState(false),\n      commentFromOpened = _useState2[0],\n      setCommentFromOpened = _useState2[1];\n\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFromOpened(function (prev) {\n      return !prev;\n    });\n  });\n  var onRemovePost = useCallback(function () {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 43\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 26\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 26\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 37\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              loading: removePostLoading,\n              onClick: onRemovePost,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 37\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 31\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, _this)],\n      extra: id && /*#__PURE__*/_jsxDEV(FollowButton, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 31\n      }, _this),\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 30\n        }, _this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 34\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, _this), commentFromOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 22\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              author: item.User.nickname,\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: item.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 45\n              }, _this),\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 22\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostCard, \"QXrBaGv2aN8zR837rrO0g/vBfzU=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["D:/nodeBird/prepare/front/components/PostCard.js"],"names":["useState","useCallback","Button","Card","Popover","List","Comment","PropTypes","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","useSelector","useDispatch","Avatar","PostImages","CommentForm","PostCardContent","REMOVE_POST_REQUEST","FollowButton","PostCard","post","dispatch","liked","setLiked","state","removePostLoading","commentFromOpened","setCommentFromOpened","onToggleLike","prev","onToggleComment","onRemovePost","type","data","id","user","me","marginBottom","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport { Button, Card, Popover, List, Comment } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\nimport {RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone} from \"@ant-design/icons\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Avatar from \"antd/lib/avatar/avatar\";\r\nimport PostImages from \"./PostImages\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport PostCardContent from \"./PostCardContent\";\r\nimport { REMOVE_POST_REQUEST } from './../reducers/post';\r\nimport FollowButton from \"./FollowButton\";\r\n\r\nconst PostCard = ({post}) =>{\r\n    const dispatch = useDispatch();\r\n    const [liked, setLiked] = useState(false);\r\n    const {removePostLoading} = useSelector((state) => state.post);\r\n    const [commentFromOpened, setCommentFromOpened] = useState(false);\r\n    const onToggleLike = useCallback(()=>{\r\n        setLiked((prev) => !prev);\r\n    }, [])\r\n    const onToggleComment = useCallback(()=>{\r\n        setCommentFromOpened((prev) => !prev);\r\n    })\r\n\r\n    const onRemovePost = useCallback(() =>{\r\n        dispatch({\r\n            type : REMOVE_POST_REQUEST,\r\n            data : post.id,\r\n        });\r\n    }, [])\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    return(\r\n        <div style={{marginBottom : 20}}>\r\n            <Card \r\n                cover ={post.Images[0] && <PostImages images={post.Images}/>}\r\n                actions={[\r\n                    <RetweetOutlined key=\"retweet\"/>,\r\n                    liked\r\n                        ?<HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike}/>\r\n                        :<HeartOutlined key=\"heart\" onClick={onToggleLike}/>,\r\n                    <MessageOutlined key=\"comment\" onClick={onToggleComment}/>,\r\n                    <Popover key=\"more\" content={(\r\n                        \r\n                        <Button.Group>\r\n                            {id && post.User.id === id ? (\r\n                                <>\r\n                                    <Button>수정</Button>\r\n                                    <Button type=\"danger\" loading={removePostLoading} onClick={onRemovePost}>삭제</Button>\r\n                                </>\r\n                            ):<Button>신고</Button>}\r\n                        </Button.Group>\r\n                    )}>\r\n                        <EllipsisOutlined/>\r\n                    </Popover>,\r\n                ]}\r\n                extra={ id && <FollowButton post={post}/>}\r\n            >\r\n                <Card.Meta\r\n                    avatar ={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                    title={post.User.nickname}\r\n                    description={<PostCardContent postData={post.content} />}\r\n                />\r\n            </Card>\r\n            {commentFromOpened &&(\r\n                <div>\r\n                     <CommentForm post={post}/>\r\n                     <List\r\n                        header={`${post.Comments.length}개의 댓글`}\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={post.Comments}\r\n                        renderItem={(item) =>(\r\n                            <li>\r\n                                <Comment\r\n                                    author={item.User.nickname}\r\n                                    avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                                    content={item.content}\r\n                                />\r\n                            </li>\r\n                        )}\r\n                     />\r\n                </div>\r\n            )}\r\n            {/*\r\n            <Comments/> */}\r\n        </div>\r\n    )\r\n};\r\n\r\nPostCard.propTypes ={\r\n    post : PropTypes.shape({\r\n        id : PropTypes.number,\r\n        User : PropTypes.object,\r\n        content : PropTypes.string,\r\n        createdAt : PropTypes.object,\r\n        Comments : PropTypes.arrayOf(PropTypes.object),\r\n        Images : PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n}\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}