{"ast":null,"code":"var _jsxFileName = \"D:\\\\nodeBird\\\\prepare\\\\front\\\\pages\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport Applayout from './../components/Applayout';\nimport PostCard from '../components/PostCard';\nimport PostForm from \"../components/PostForm\";\nimport { useEffect } from \"react\";\nimport Head from \"next/head\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { LOAD_POST_REQUEST } from './../reducers/post';\nimport { LOAD_USER_REQUEST } from './../reducers/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Home = function Home() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePost = _useSelector2.hasMorePost,\n      loadPostLoading = _useSelector2.loadPostLoading;\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch({\n      type: LOAD_USER_REQUEST\n    });\n    dispatch({\n      type: LOAD_POST_REQUEST\n    });\n  }, [hasMorePost, loadPostLoading]);\n  useEffect(function () {\n    function onScroll() {\n      console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\n\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePost && !loadPostLoading) {\n          dispatch({\n            type: LOAD_POST_REQUEST\n          }, [hasMorePost, loadPostLoading]);\n        }\n      }\n    }\n\n    window.addEventListener(\"scroll\", onScroll);\n    return function () {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePost, loadPostLoading]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"NodeBird\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Applayout, {\n      children: [me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 24\n      }, _this), mainPosts.map(function (post, index) {\n        return /*#__PURE__*/_jsxDEV(PostCard, {\n          post: post\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 49\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Home, \"a63BsuJoqIxg8Ik6/cr4QZfODiU=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/nodeBird/prepare/front/pages/index.js"],"names":["Applayout","PostCard","PostForm","useEffect","Head","useSelector","useDispatch","LOAD_POST_REQUEST","LOAD_USER_REQUEST","Home","state","user","me","post","mainPosts","hasMorePost","loadPostLoading","dispatch","type","onScroll","console","log","window","scrollY","document","documentElement","clientHeight","scrollHeight","addEventListener","removeEventListener","map","index","id"],"mappings":";;;;AAAA,OAAOA,SAAP,MAAsB,2BAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,SAASC,iBAAT,QAAkC,oBAAlC;;;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAK;AAAA;;AACd,qBAAaJ,WAAW,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAxB;AAAA,MAAOC,EAAP,gBAAOA,EAAP;;AACA,sBAAkDP,WAAW,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACG,IAAjB;AAAA,GAAD,CAA7D;AAAA,MAAOC,SAAP,iBAAOA,SAAP;AAAA,MAAkBC,WAAlB,iBAAkBA,WAAlB;AAAA,MAA+BC,eAA/B,iBAA+BA,eAA/B;;AACA,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,YAAK;AACXc,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAGV;AADF,KAAD,CAAR;AAGAS,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAGX;AADF,KAAD,CAAR;AAGH,GAPQ,EAON,CAACQ,WAAD,EAAcC,eAAd,CAPM,CAAT;AASAb,EAAAA,SAAS,CAAC,YAAK;AACX,aAASgB,QAAT,GAAmB;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,OAAnB,EAA4BC,QAAQ,CAACC,eAAT,CAAyBC,YAArD,EAAmEF,QAAQ,CAACC,eAAT,CAAyBE,YAA5F;;AACA,UAAGL,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAsC,GAAlG,EAAsG;AAClG,YAAGZ,WAAW,IAAI,CAACC,eAAnB,EAAmC;AAC/BC,UAAAA,QAAQ,CAAC;AACLC,YAAAA,IAAI,EAAGX;AADF,WAAD,EAEL,CAACQ,WAAD,EAAcC,eAAd,CAFK,CAAR;AAGH;AACJ;AACJ;;AACDM,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCT,QAAlC;AACA,WAAO,YAAK;AACRG,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCV,QAArC;AACH,KAFD;AAGH,GAfQ,EAeN,CAACJ,WAAD,EAAcC,eAAd,CAfM,CAAT;AAkBA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aADJ,eAII,QAAC,SAAD;AAAA,iBACKJ,EAAE,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,eADX,EAEKE,SAAS,CAACgB,GAAV,CAAc,UAACjB,IAAD,EAAOkB,KAAP;AAAA,4BAAiB,QAAC,QAAD;AAAwB,UAAA,IAAI,EAAElB;AAA9B,WAAeA,IAAI,CAACmB,EAApB;AAAA;AAAA;AAAA;AAAA,iBAAjB;AAAA,OAAd,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ;AAAA,kBADJ;AAWH,CA3CD;;GAAMvB,I;UACWJ,W,EACqCA,W,EACjCC,W;;;KAHfG,I;AA6CN,eAAeA,IAAf","sourcesContent":["import Applayout from './../components/Applayout';\r\nimport PostCard from '../components/PostCard';\r\nimport PostForm from \"../components/PostForm\";\r\nimport {useEffect} from \"react\";\r\nimport Head from \"next/head\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { LOAD_POST_REQUEST } from './../reducers/post';\r\nimport { LOAD_USER_REQUEST } from './../reducers/user';\r\n\r\nconst Home = () =>{\r\n    const {me} = useSelector((state) => state.user);\r\n    const {mainPosts, hasMorePost, loadPostLoading} = useSelector((state) => state.post);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() =>{\r\n        dispatch({\r\n            type : LOAD_USER_REQUEST,\r\n        });\r\n        dispatch({\r\n            type : LOAD_POST_REQUEST,\r\n        });\r\n    }, [hasMorePost, loadPostLoading]);\r\n\r\n    useEffect(() =>{\r\n        function onScroll(){\r\n            console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\r\n            if(window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight-300){\r\n                if(hasMorePost && !loadPostLoading){\r\n                    dispatch({\r\n                        type : LOAD_POST_REQUEST,\r\n                    }, [hasMorePost, loadPostLoading]);\r\n                }\r\n            }\r\n        }\r\n        window.addEventListener(\"scroll\", onScroll);\r\n        return () =>{\r\n            window.removeEventListener(\"scroll\", onScroll);\r\n        };\r\n    }, [hasMorePost, loadPostLoading])\r\n\r\n    \r\n    return(\r\n        <>\r\n            <Head>\r\n                <title>NodeBird</title>\r\n            </Head>\r\n            <Applayout>\r\n                {me && <PostForm/>}\r\n                {mainPosts.map((post, index) => <PostCard key={post.id} post={post}/>)}\r\n            </Applayout>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}