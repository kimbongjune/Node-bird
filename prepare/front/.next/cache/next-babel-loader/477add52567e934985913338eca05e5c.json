{"ast":null,"code":"import shortId from \"shortid\";\nimport produce from \"immer\";\nimport faker from \"faker\";\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"kim\"\n    },\n    content: \"첫 번째 게시글 #해시태그 #익스프레스\",\n    Images: [{\n      id: shortId.generate(),\n      src: \"https://scribemedia.com/wp-content/uploads/2018/11/0-Should-You-Write-a-Book-700x406.jpg\"\n    }, {\n      id: shortId.generate(),\n      src: \"https://t1.daumcdn.net/cfile/tistory/24283C3858F778CA2E\"\n    }, {\n      id: shortId.generate(),\n      src: \"https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg\"\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: \"ree\"\n      },\n      content: \"123123123123\"\n    }, {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: \"park\"\n      },\n      content: \"content\"\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\ninitialState.mainPosts.concat(Array(20).fill().map(function () {\n  return {\n    id: shortId.generate(),\n    User: {\n      id: shortId.generate(),\n      nickname: faker.name.findName()\n    },\n    content: faker.lorem.paragraph,\n    Images: [{\n      src: faker.image.imageUrl()\n    }],\n    Comments: [{\n      User: {\n        id: shortId.generate(),\n        nickname: faker.name.findName()\n      },\n      content: faker.lorem.sentence()\n    }]\n  };\n}));\nexport var ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport var REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport var REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport var REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport var ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport var ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport var ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: \"kim\"\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: \"kim\"\n    }\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (V) {\n            return V.id === action.data.postId;\n          });\n          post.Comments.unshift(dummyComment(action.data.content));\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break; // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n          // const post = {...state.mainPosts[postIndex]};\n          // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n          // const mainPosts = [...state.mainPosts];\n          // mainPosts[postIndex] = post;\n          // return{\n          //     ...state,\n          //     mainPosts,\n          //     addCommentLoading : false,\n          //     addCommentDone : true,\n          // };\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/nodeBird/prepare/front/reducers/post.js"],"names":["shortId","produce","faker","initialState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","concat","Array","fill","map","name","findName","lorem","paragraph","image","imageUrl","sentence","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","dummyComment","reducer","state","action","draft","unshift","error","filter","v","post","find","V","postId"],"mappings":"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","sourcesContent":["import shortId from \"shortid\";\r\nimport produce from \"immer\";\r\nimport faker from \"faker\";\r\n\r\nexport const initialState = {\r\n    mainPosts : [{\r\n        id:1,\r\n        User :{\r\n            id:1,\r\n            nickname:\"kim\",\r\n        },\r\n        content:\"첫 번째 게시글 #해시태그 #익스프레스\",\r\n        Images : [\r\n            {\r\n                id : shortId.generate(),\r\n                src : \"https://scribemedia.com/wp-content/uploads/2018/11/0-Should-You-Write-a-Book-700x406.jpg\",\r\n            },{\r\n                id : shortId.generate(),\r\n                src : \"https://t1.daumcdn.net/cfile/tistory/24283C3858F778CA2E\",\r\n            },{\r\n                id : shortId.generate(),\r\n                src : \"https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg\",\r\n            }],\r\n        Comments :[{\r\n            id : shortId.generate(),\r\n            User:{\r\n                id : shortId.generate(),\r\n                nickname : \"ree\",\r\n            },\r\n            content : \"123123123123\",\r\n        },{\r\n            id : shortId.generate(),\r\n            User:{\r\n                id : shortId.generate(),\r\n                nickname : \"park\",\r\n            },\r\n            content: \"content\",\r\n        }],\r\n    }],\r\n    imagePaths :[],\r\n    addPostLoading : false,\r\n    addPostDone : false,\r\n    addPostError : null,\r\n    removePostLoading : false,\r\n    removePostDone : false,\r\n    removePostError : null,\r\n    addCommentLoading : false,\r\n    addCommentDone : false,\r\n    addCommentError : null,\r\n}\r\n\r\ninitialState.mainPosts.concat(\r\n    Array(20).fill().map(() =>({\r\n        id : shortId.generate(),\r\n        User :{\r\n            id : shortId.generate(),\r\n            nickname : faker.name.findName()\r\n        },\r\n        content: faker.lorem.paragraph,\r\n        Images : [{\r\n            src : faker.image.imageUrl(),\r\n        }],\r\n        Comments : [{\r\n            User :{\r\n                id : shortId.generate(),\r\n                nickname : faker.name.findName(),\r\n            },\r\n            content: faker.lorem.sentence(),\r\n        }],\r\n    }))\r\n);\r\n\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\r\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\r\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\r\n\r\n\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\r\n\r\n\r\nexport const addPost = (data) =>({\r\n    type : ADD_POST_REQUEST,\r\n    data,\r\n});\r\n\r\nexport const addComment = (data) =>({\r\n    type : ADD_COMMENT_REQUEST,\r\n    data,\r\n});\r\n\r\nconst dummyPost =(data) => ({\r\n    id : data.id,\r\n    content : data.content,\r\n    User :{\r\n        id:1,\r\n        nickname:\"kim\",\r\n    },\r\n    Images : [],\r\n    Comments : [],\r\n});\r\n\r\nconst dummyComment = (data) =>({\r\n    id : shortId.generate(),\r\n    content : data,\r\n    User : {\r\n        id : 1,\r\n        nickname : \"kim\",\r\n    },\r\n});\r\n\r\nconst reducer = (state = initialState, action) =>{\r\n    return produce(state, (draft) =>{\r\n        switch(action.type){\r\n            case ADD_POST_REQUEST:\r\n                draft.addPostLoading = true;\r\n                draft.addPostDone = false;\r\n                draft.addPostError = null;\r\n                break;\r\n            case ADD_POST_SUCCESS:\r\n                draft.addPostLoading = false;\r\n                draft.addPostDone = true;\r\n                draft.mainPosts.unshift(dummyPost(action.data));\r\n                break;\r\n            case ADD_POST_FAILURE:\r\n                draft.addPostLoading = false;\r\n                draft.addPostError = action.error;\r\n                break;\r\n            case REMOVE_POST_REQUEST:\r\n                draft.removePostLoading = true;\r\n                draft.removePostDone = false;\r\n                draft.removePostError = null;\r\n                break;\r\n            case REMOVE_POST_SUCCESS:\r\n                draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\r\n                draft.removePostLoading = false;\r\n                draft.removePostDone = true;\r\n                break;\r\n            case REMOVE_POST_FAILURE:\r\n                draft.removePostLoading = false;\r\n                draft.removePostError = action.error;\r\n                break;\r\n            case ADD_COMMENT_REQUEST:\r\n                draft.addCommentLoading = true;\r\n                draft.addCommentDone = false;\r\n                draft.addCommentError = null;\r\n                break;\r\n            case ADD_COMMENT_SUCCESS:{\r\n                const post = draft.mainPosts.find((V) => V.id === action.data.postId);\r\n                post.Comments.unshift(dummyComment(action.data.content));\r\n                draft.addCommentLoading = false;\r\n                draft.addCommentDone = true;\r\n                break;\r\n                // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\r\n                // const post = {...state.mainPosts[postIndex]};\r\n                // post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n                // const mainPosts = [...state.mainPosts];\r\n                // mainPosts[postIndex] = post;\r\n                // return{\r\n                //     ...state,\r\n                //     mainPosts,\r\n                //     addCommentLoading : false,\r\n                //     addCommentDone : true,\r\n                // };\r\n            }\r\n            case ADD_COMMENT_FAILURE:\r\n                draft.addCommentLoading = false;\r\n                draft.addCommentError = action.error;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    });\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}