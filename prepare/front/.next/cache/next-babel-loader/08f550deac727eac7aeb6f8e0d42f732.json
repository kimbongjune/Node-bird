{"ast":null,"code":"import { all, fork, call, put, take, takeEvery, takeLatest, throttle, delay } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { FOLLOW_FAILURE, FOLLOW_REQUEST, LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_SUCCESS } from \"../reducers/user\";\nimport { UNFOLLOW_REQUEST, FOLLOW_SUCCESS, UNFOLLOW_FAILURE, LOAD_USER_SUCCESS } from './../reducers/user';\n\nfunction logInAPI(data) {\n  return axios.post(\"/user/login\", data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/user/logout\");\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post(\"/user\", data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI(data) {\n  return axios.post(\"/api/follow\", data);\n}\n\nfunction* follow(action) {\n  try {\n    //const result = yield call(followAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unFollowAPI(data) {\n  return axios.post(\"/api/unFollow\", data);\n}\n\nfunction* unFollow(action) {\n  try {\n    //const result = yield call(unFollowAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      //data : result.data,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadUserAPI() {\n  return axios.post(\"/user\");\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadUser() {\n  yield takeEvery(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction* watchFollow() {\n  yield takeEvery(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnFollow() {\n  yield takeEvery(UNFOLLOW_REQUEST, unFollow);\n}\n\nfunction* watchLogin() {\n  yield takeEvery(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogout() {\n  yield takeEvery(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLoadUser), fork(watchFollow), fork(watchUnFollow), fork(watchLogin), fork(watchLogout), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["D:/nodeBird/prepare/front/sagas/user.js"],"names":["all","fork","call","put","take","takeEvery","takeLatest","throttle","delay","axios","FOLLOW_FAILURE","FOLLOW_REQUEST","LOAD_USER_FAILURE","LOAD_USER_REQUEST","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","UNFOLLOW_SUCCESS","UNFOLLOW_REQUEST","FOLLOW_SUCCESS","UNFOLLOW_FAILURE","LOAD_USER_SUCCESS","logInAPI","data","post","logIn","action","result","type","err","error","response","logOutAPI","logOut","signUpAPI","signUp","console","log","followAPI","follow","unFollowAPI","unFollow","loadUserAPI","loadUser","watchLoadUser","watchFollow","watchUnFollow","watchLogin","watchLogout","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import {all, fork, call, put, take, takeEvery, takeLatest, throttle, delay} from \"redux-saga/effects\"\r\nimport axios from \"axios\";\r\nimport { FOLLOW_FAILURE, FOLLOW_REQUEST, LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_SUCCESS } from \"../reducers/user\";\r\nimport { UNFOLLOW_REQUEST, FOLLOW_SUCCESS, UNFOLLOW_FAILURE, LOAD_USER_SUCCESS } from './../reducers/user';\r\n\r\n\r\nfunction logInAPI(data){\r\n    return axios.post(\"/user/login\", data);\r\n}\r\n\r\nfunction* logIn(action){\r\n    try {\r\n        const result = yield call(logInAPI, action.data);\r\n        yield put({\r\n            type : LOG_IN_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : LOG_IN_FAILURE,\r\n            error : err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction logOutAPI(){\r\n    return axios.post(\"/user/logout\");\r\n}\r\n\r\nfunction* logOut(){\r\n    try {\r\n        yield call(logOutAPI);\r\n        yield put({\r\n            type : LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : LOG_OUT_FAILURE,\r\n            error : err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction signUpAPI(data){\r\n    return axios.post(\"/user\", data);\r\n}\r\n\r\nfunction* signUp(action){\r\n    try {\r\n        const result = yield call(signUpAPI, action.data);\r\n        console.log(result);\r\n        yield put({\r\n            type : SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : SIGN_UP_FAILURE,\r\n            error : err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction followAPI(data){\r\n    return axios.post(\"/api/follow\", data);\r\n}\r\n\r\nfunction* follow(action){\r\n    try {\r\n        //const result = yield call(followAPI, action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type : FOLLOW_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : FOLLOW_FAILURE,\r\n            error : err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction unFollowAPI(data){\r\n    return axios.post(\"/api/unFollow\", data);\r\n}\r\n\r\nfunction* unFollow(action){\r\n    try {\r\n        //const result = yield call(unFollowAPI, action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type : UNFOLLOW_SUCCESS,\r\n            //data : result.data,\r\n            data : action.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : UNFOLLOW_FAILURE,\r\n            error : err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction loadUserAPI(){\r\n    return axios.post(\"/user\");\r\n}\r\n\r\nfunction* loadUser(action){\r\n    try {\r\n        const result = yield call(loadUserAPI, action.data);\r\n        yield put({\r\n            type : LOAD_USER_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : LOAD_USER_FAILURE,\r\n            error : err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLoadUser(){\r\n    yield takeEvery(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nfunction* watchFollow(){\r\n    yield takeEvery(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnFollow(){\r\n    yield takeEvery(UNFOLLOW_REQUEST, unFollow);\r\n}\r\n\r\nfunction* watchLogin(){\r\n    yield takeEvery(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogout(){\r\n    yield takeEvery(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp(){\r\n    yield takeEvery(SIGN_UP_REQUEST, signUp);\r\n}\r\nexport default function* userSaga(){\r\n\r\n    yield all([\r\n        fork(watchLoadUser),\r\n        fork(watchFollow),\r\n        fork(watchUnFollow),\r\n        fork(watchLogin),\r\n        fork(watchLogout),\r\n        fork(watchSignUp),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}