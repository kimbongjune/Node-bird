{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\nodeBird\\\\prepare\\\\front\\\\components\\\\CommentForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Form } from \"antd\";\nimport { useCallback } from 'react';\nimport useInput from \"../hooks/useInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      commentText = _useInput2[0],\n      setCommentText = _useInput2[1];\n\n  var onSubvitComment = useCallback(function () {}, commentText);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubvitComment,\n    children: \"\\uD3FC\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(CommentForm, \"wR7w5Kc9EjFohaDpzx0DYnsPQkk=\", false, function () {\n  return [useInput];\n});\n\n_c = CommentForm;\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["D:/nodeBird/prepare/front/components/CommentForm.js"],"names":["Form","useCallback","useInput","CommentForm","post","commentText","setCommentText","onSubvitComment"],"mappings":";;;;;;AAAA,SAAQA,IAAR,QAAmB,MAAnB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAW;AAAA;;AAAA,MAATC,IAAS,QAATA,IAAS;;AAC3B,kBAAsCF,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOG,WAAP;AAAA,MAAoBC,cAApB;;AACA,MAAMC,eAAe,GAAGN,WAAW,CAAC,YAAK,CAExC,CAFkC,EAEhCI,WAFgC,CAAnC;AAGA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CAVD;;GAAMJ,W;UACoCD,Q;;;KADpCC,W;AAYN,eAAeA,WAAf","sourcesContent":["import {Form} from \"antd\";\r\nimport { useCallback } from 'react';\r\nimport useInput from \"../hooks/useInput\";\r\n\r\nconst CommentForm = ({post}) =>{\r\n    const [commentText, setCommentText] = useInput(\"\");\r\n    const onSubvitComment = useCallback(() =>{\r\n\r\n    }, commentText)\r\n    return(\r\n        <Form onFinish={onSubvitComment}>\r\n            Ìèº\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}