{"ast":null,"code":"import { all, fork, call, put, take, takeEvery, takeLatest, throttle, delay } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS } from \"../reducers/user\";\n\nfunction logInAPI(data) {\n  return axios.post(\"/api/login\", data);\n}\n\nfunction* logIn(action) {\n  try {\n    //const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      //data : result.data,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* logOut() {\n  try {\n    //const result = yield call(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* signUp() {\n  try {\n    //const result = yield call(signUpAPI);\n    yield delay(1000);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeEvery(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogout() {\n  yield takeEvery(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogout), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["D:/nodeBird/prepare/front/sagas/user.js"],"names":["all","fork","call","put","take","takeEvery","takeLatest","throttle","delay","axios","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","logInAPI","data","post","logIn","action","type","err","error","response","logOutAPI","logOut","signUpAPI","signUp","watchLogin","watchLogout","watchSignUp","userSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,IAAb,EAAmBC,IAAnB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,SAApC,EAA+CC,UAA/C,EAA2DC,QAA3D,EAAqEC,KAArE,QAAiF,oBAAjF;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,cAAzB,EAAyCC,cAAzC,EAAyDC,eAAzD,EAA0EC,eAA1E,EAA2FC,eAA3F,EAA4GC,eAA5G,EAA6HC,eAA7H,EAA8IC,eAA9I,QAAqK,kBAArK;;AAGA,SAASC,QAAT,CAAkBC,IAAlB,EAAuB;AACnB,SAAOX,KAAK,CAACY,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAAP;AACH;;AAED,UAAUE,KAAV,CAAgBC,MAAhB,EAAuB;AACnB,MAAI;AACA;AACA,UAAMf,KAAK,CAAC,IAAD,CAAX;AACA,UAAML,GAAG,CAAC;AACNqB,MAAAA,IAAI,EAAGZ,cADD;AAEN;AACAQ,MAAAA,IAAI,EAAGG,MAAM,CAACH;AAHR,KAAD,CAAT;AAKH,GARD,CAQE,OAAOK,GAAP,EAAY;AACV,UAAMtB,GAAG,CAAC;AACNqB,MAAAA,IAAI,EAAGd,cADD;AAENgB,MAAAA,KAAK,EAAGD,GAAG,CAACE,QAAJ,CAAaP;AAFf,KAAD,CAAT;AAIH;AACJ;;AAED,SAASQ,SAAT,GAAoB;AAChB,SAAOnB,KAAK,CAACY,IAAN,CAAW,aAAX,CAAP;AACH;;AAED,UAAUQ,MAAV,GAAkB;AACd,MAAI;AACA;AACA,UAAMrB,KAAK,CAAC,IAAD,CAAX;AACA,UAAML,GAAG,CAAC;AACNqB,MAAAA,IAAI,EAAGT;AADD,KAAD,CAAT;AAGH,GAND,CAME,OAAOU,GAAP,EAAY;AACV,UAAMtB,GAAG,CAAC;AACNqB,MAAAA,IAAI,EAAGX,eADD;AAENa,MAAAA,KAAK,EAAGD,GAAG,CAACE,QAAJ,CAAaP;AAFf,KAAD,CAAT;AAIH;AACJ;;AAED,SAASU,SAAT,GAAoB;AAChB,SAAOrB,KAAK,CAACY,IAAN,CAAW,aAAX,CAAP;AACH;;AAED,UAAUU,MAAV,GAAkB;AACd,MAAI;AACA;AACA,UAAMvB,KAAK,CAAC,IAAD,CAAX;AACA,UAAML,GAAG,CAAC;AACNqB,MAAAA,IAAI,EAAGN;AADD,KAAD,CAAT;AAGH,GAND,CAME,OAAOO,GAAP,EAAY;AACV,UAAMtB,GAAG,CAAC;AACNqB,MAAAA,IAAI,EAAGR,eADD;AAENU,MAAAA,KAAK,EAAGD,GAAG,CAACE,QAAJ,CAAaP;AAFf,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUY,UAAV,GAAsB;AAClB,QAAM3B,SAAS,CAACM,cAAD,EAAiBW,KAAjB,CAAf;AACH;;AAED,UAAUW,WAAV,GAAuB;AACnB,QAAM5B,SAAS,CAACS,eAAD,EAAkBe,MAAlB,CAAf;AACH;;AAED,UAAUK,WAAV,GAAuB;AACnB,QAAM7B,SAAS,CAACY,eAAD,EAAkBc,MAAlB,CAAf;AACH;;AACD,eAAe,UAAUI,QAAV,GAAoB;AAE/B,QAAMnC,GAAG,CAAC,CACNC,IAAI,CAAC+B,UAAD,CADE,EAEN/B,IAAI,CAACgC,WAAD,CAFE,EAGNhC,IAAI,CAACiC,WAAD,CAHE,CAAD,CAAT;AAKH","sourcesContent":["import {all, fork, call, put, take, takeEvery, takeLatest, throttle, delay} from \"redux-saga/effects\"\r\nimport axios from \"axios\";\r\nimport { LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS } from \"../reducers/user\";\r\n\r\n\r\nfunction logInAPI(data){\r\n    return axios.post(\"/api/login\", data);\r\n}\r\n\r\nfunction* logIn(action){\r\n    try {\r\n        //const result = yield call(logInAPI, action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type : LOG_IN_SUCCESS,\r\n            //data : result.data,\r\n            data : action.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : LOG_IN_FAILURE,\r\n            error : err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction logOutAPI(){\r\n    return axios.post(\"/api/logout\");\r\n}\r\n\r\nfunction* logOut(){\r\n    try {\r\n        //const result = yield call(logOutAPI);\r\n        yield delay(1000);\r\n        yield put({\r\n            type : LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : LOG_OUT_FAILURE,\r\n            error : err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction signUpAPI(){\r\n    return axios.post(\"/api/logout\");\r\n}\r\n\r\nfunction* signUp(){\r\n    try {\r\n        //const result = yield call(signUpAPI);\r\n        yield delay(1000);\r\n        yield put({\r\n            type : SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : SIGN_UP_FAILURE,\r\n            error : err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLogin(){\r\n    yield takeEvery(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogout(){\r\n    yield takeEvery(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp(){\r\n    yield takeEvery(SIGN_UP_REQUEST, signUp);\r\n}\r\nexport default function* userSaga(){\r\n\r\n    yield all([\r\n        fork(watchLogin),\r\n        fork(watchLogout),\r\n        fork(watchSignUp),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}