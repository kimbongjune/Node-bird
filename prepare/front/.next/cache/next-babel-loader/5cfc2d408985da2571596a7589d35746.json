{"ast":null,"code":"import { all, fork, call, put, take } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction logInAPI(data) {\n  return axios.post(\"/api/login\", data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: \"LOG_IN_SUCCESS\",\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: \"LOG_IN_FAILURE\",\n      data: error.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* logOut() {\n  try {\n    const result = yield call(logOutAPI);\n    yield put({\n      type: \"LOG_OUT_SUCCESS\",\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: \"LOG_OUT_FAILURE\",\n      data: error.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post(\"/api/addpost\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: \"ADD_POST_SUCCESS\",\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: \"ADD_POST_FAILURE\",\n      data: error.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield take(\"LOG_IN_REQUEST\", logIn);\n}\n\nfunction* watchLogout() {\n  yield take(\"LOG_OUT_REQUEST\", logOut);\n}\n\nfunction* watchAddPost() {\n  yield take(\"ADD_POST_REQUEST\", addPost);\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchLogin), fork(watchLogout), fork(watchAddPost)]);\n}","map":{"version":3,"sources":["D:/nodeBird/prepare/front/sagas/index.js"],"names":["all","fork","call","put","take","axios","logInAPI","data","post","logIn","action","result","type","error","response","logOutAPI","logOut","addPostAPI","addPost","watchLogin","watchLogout","watchAddPost","rootSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,IAAb,EAAmBC,IAAnB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,oBAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAuB;AACnB,SAAOF,KAAK,CAACG,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAAP;AACH;;AAED,UAAUE,KAAV,CAAgBC,MAAhB,EAAuB;AACnB,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMT,IAAI,CAACI,QAAD,EAAWI,MAAM,CAACH,IAAlB,CAAzB;AACA,UAAMJ,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAG,gBADD;AAENL,MAAAA,IAAI,EAAGI,MAAM,CAACJ;AAFR,KAAD,CAAT;AAIH,GAND,CAME,OAAOM,KAAP,EAAc;AACZ,UAAMV,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAG,gBADD;AAENL,MAAAA,IAAI,EAAGM,KAAK,CAACC,QAAN,CAAeP;AAFhB,KAAD,CAAT;AAIH;AACJ;;AAED,SAASQ,SAAT,GAAoB;AAChB,SAAOV,KAAK,CAACG,IAAN,CAAW,aAAX,CAAP;AACH;;AAED,UAAUQ,MAAV,GAAkB;AACd,MAAI;AACA,UAAML,MAAM,GAAG,MAAMT,IAAI,CAACa,SAAD,CAAzB;AACA,UAAMZ,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAG,iBADD;AAENL,MAAAA,IAAI,EAAGI,MAAM,CAACJ;AAFR,KAAD,CAAT;AAIH,GAND,CAME,OAAOM,KAAP,EAAc;AACZ,UAAMV,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAG,iBADD;AAENL,MAAAA,IAAI,EAAGM,KAAK,CAACC,QAAN,CAAeP;AAFhB,KAAD,CAAT;AAIH;AACJ;;AAED,SAASU,UAAT,CAAoBV,IAApB,EAAyB;AACrB,SAAOF,KAAK,CAACG,IAAN,CAAW,cAAX,EAA2BD,IAA3B,CAAP;AACH;;AAED,UAAUW,OAAV,CAAkBR,MAAlB,EAAyB;AACrB,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMT,IAAI,CAACe,UAAD,EAAaP,MAAM,CAACH,IAApB,CAAzB;AACA,UAAMJ,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAG,kBADD;AAENL,MAAAA,IAAI,EAAGI,MAAM,CAACJ;AAFR,KAAD,CAAT;AAIH,GAND,CAME,OAAOM,KAAP,EAAc;AACZ,UAAMV,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAG,kBADD;AAENL,MAAAA,IAAI,EAAGM,KAAK,CAACC,QAAN,CAAeP;AAFhB,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUY,UAAV,GAAsB;AAClB,QAAMf,IAAI,CAAC,gBAAD,EAAmBK,KAAnB,CAAV;AACH;;AAED,UAAUW,WAAV,GAAuB;AACnB,QAAMhB,IAAI,CAAC,iBAAD,EAAoBY,MAApB,CAAV;AACH;;AAED,UAAUK,YAAV,GAAwB;AACpB,QAAMjB,IAAI,CAAC,kBAAD,EAAqBc,OAArB,CAAV;AACH;;AAGD,eAAe,UAAUI,QAAV,GAAoB;AAC/B,QAAMtB,GAAG,CAAC,CACNC,IAAI,CAACkB,UAAD,CADE,EAENlB,IAAI,CAACmB,WAAD,CAFE,EAGNnB,IAAI,CAACoB,YAAD,CAHE,CAAD,CAAT;AAKH","sourcesContent":["import {all, fork, call, put, take} from \"redux-saga/effects\"\r\nimport axios from \"axios\";\r\n\r\nfunction logInAPI(data){\r\n    return axios.post(\"/api/login\", data);\r\n}\r\n\r\nfunction* logIn(action){\r\n    try {\r\n        const result = yield call(logInAPI, action.data);\r\n        yield put({\r\n            type : \"LOG_IN_SUCCESS\",\r\n            data : result.data,\r\n        });\r\n    } catch (error) {\r\n        yield put({\r\n            type : \"LOG_IN_FAILURE\",\r\n            data : error.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction logOutAPI(){\r\n    return axios.post(\"/api/logout\");\r\n}\r\n\r\nfunction* logOut(){\r\n    try {\r\n        const result = yield call(logOutAPI);\r\n        yield put({\r\n            type : \"LOG_OUT_SUCCESS\",\r\n            data : result.data,\r\n        });\r\n    } catch (error) {\r\n        yield put({\r\n            type : \"LOG_OUT_FAILURE\",\r\n            data : error.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction addPostAPI(data){\r\n    return axios.post(\"/api/addpost\", data);\r\n}\r\n\r\nfunction* addPost(action){\r\n    try {\r\n        const result = yield call(addPostAPI, action.data);\r\n        yield put({\r\n            type : \"ADD_POST_SUCCESS\",\r\n            data : result.data,\r\n        });\r\n    } catch (error) {\r\n        yield put({\r\n            type : \"ADD_POST_FAILURE\",\r\n            data : error.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLogin(){\r\n    yield take(\"LOG_IN_REQUEST\", logIn);\r\n}\r\n\r\nfunction* watchLogout(){\r\n    yield take(\"LOG_OUT_REQUEST\", logOut);\r\n}\r\n\r\nfunction* watchAddPost(){\r\n    yield take(\"ADD_POST_REQUEST\", addPost);\r\n}\r\n\r\n\r\nexport default function* rootSaga(){\r\n    yield all([\r\n        fork(watchLogin),\r\n        fork(watchLogout),\r\n        fork(watchAddPost),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}