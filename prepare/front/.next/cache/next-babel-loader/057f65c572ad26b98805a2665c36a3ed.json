{"ast":null,"code":"import { all, fork, call, put, take, takeEvery, takeLatest, throttle, delay } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, REMOVE_POST_SUCCESS, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE, generateDummyPost, LIKE_POST_REQUEST, LIKE_POST_FAILURE, UNLIKE_POST_SUCCESS, UPLOAD_IMAGES_REQUEST } from \"../reducers/post\";\nimport { ADD_POST_TO_ME } from \"../reducers/user\";\nimport shortId from \"shortid\";\nimport { REMOVE_POST_REQUEST, REMOVE_POST_FAILURE, UNLIKE_POST_REQUEST, LIKE_POST_SUCCESS, UNLIKE_POST_FAILURE } from './../reducers/post';\nimport { REMOVE_POST_OF_ME } from './../reducers/user';\n\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", {\n    content: data\n  });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(\"/posts\", data);\n}\n\nfunction* loadPost(action) {\n  try {\n    const result = yield call(loadPostAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchAddPost() {\n  yield takeEvery(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchLoadPost() {\n  yield takeEvery(LOAD_POST_REQUEST, loadPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeEvery(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeEvery(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchUploadImages() {\n  yield takeEvery(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchUploadImages), fork(watchLikePost), fork(watchUnlikePost), fork(watchAddPost), fork(watchLoadPost), fork(watchRemovePost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["D:/nodeBird/prepare/front/sagas/post.js"],"names":["all","fork","call","put","take","takeEvery","takeLatest","throttle","delay","axios","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","REMOVE_POST_SUCCESS","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","generateDummyPost","LIKE_POST_REQUEST","LIKE_POST_FAILURE","UNLIKE_POST_SUCCESS","UPLOAD_IMAGES_REQUEST","ADD_POST_TO_ME","shortId","REMOVE_POST_REQUEST","REMOVE_POST_FAILURE","UNLIKE_POST_REQUEST","LIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","REMOVE_POST_OF_ME","addPostAPI","data","post","content","addPost","action","result","type","id","err","error","response","loadPostAPI","get","loadPost","removePostAPI","delete","removePost","console","addCommentAPI","postId","addComment","unlikePostAPI","unlikePost","likePostAPI","patch","likePost","watchLikePost","watchUnlikePost","watchAddPost","watchLoadPost","watchRemovePost","watchAddComment","watchUploadImages","uploadImages","postSaga"],"mappings":"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","sourcesContent":["import {all, fork, call, put, take, takeEvery, takeLatest, throttle, delay} from \"redux-saga/effects\"\r\nimport axios from \"axios\";\r\nimport { ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, REMOVE_POST_SUCCESS, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE, generateDummyPost, LIKE_POST_REQUEST, LIKE_POST_FAILURE, UNLIKE_POST_SUCCESS, UPLOAD_IMAGES_REQUEST } from \"../reducers/post\";\r\nimport { ADD_POST_TO_ME } from \"../reducers/user\";\r\nimport shortId from \"shortid\";\r\nimport { REMOVE_POST_REQUEST, REMOVE_POST_FAILURE, UNLIKE_POST_REQUEST, LIKE_POST_SUCCESS, UNLIKE_POST_FAILURE } from './../reducers/post';\r\nimport { REMOVE_POST_OF_ME } from './../reducers/user';\r\n\r\nfunction addPostAPI(data){\r\n    return axios.post(\"/post\", { content : data});\r\n}\r\n\r\nfunction* addPost(action){\r\n    try {\r\n        const result = yield call(addPostAPI, action.data);\r\n        yield put({\r\n            type : ADD_POST_SUCCESS,\r\n            data : result.data,\r\n        });\r\n        yield put({\r\n            type : ADD_POST_TO_ME,\r\n            data : result.data.id,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : ADD_POST_FAILURE,\r\n            error : err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction loadPostAPI(data){\r\n    return axios.get(\"/posts\", data);\r\n}\r\n\r\nfunction* loadPost(action){\r\n    try {\r\n        const result = yield call(loadPostAPI, action.data);\r\n        yield put({\r\n            type : LOAD_POST_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : LOAD_POST_FAILURE,\r\n            error : err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction removePostAPI(data){\r\n    return axios.delete(`/post/${data}`);\r\n}\r\n\r\nfunction* removePost(action){\r\n    try {\r\n        const result = yield call(removePostAPI, action.data);\r\n        yield put({\r\n            type : REMOVE_POST_SUCCESS,\r\n            data : result.data,\r\n        });\r\n        yield put({\r\n            type : REMOVE_POST_OF_ME,\r\n            data : action.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type : REMOVE_POST_FAILURE,\r\n            error : err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction addCommentAPI(data){\r\n    return axios.post(`/post/${data.postId}/comment`, data);\r\n}\r\n\r\nfunction* addComment(action){\r\n    try {\r\n        const result = yield call(addCommentAPI, action.data);\r\n        yield put({\r\n            type : ADD_COMMENT_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type : ADD_COMMENT_FAILURE,\r\n            error : err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction unlikePostAPI(data){\r\n    return axios.delete(`/post/${data}/like`);\r\n}\r\n\r\nfunction* unlikePost(action){\r\n    try {\r\n        const result = yield call(unlikePostAPI, action.data);\r\n        yield put({\r\n            type : UNLIKE_POST_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type : UNLIKE_POST_FAILURE,\r\n            error : err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction likePostAPI(data){\r\n    return axios.patch(`/post/${data}/like`);\r\n}\r\n\r\nfunction* likePost(action){\r\n    try {\r\n        const result = yield call(likePostAPI, action.data);\r\n        yield put({\r\n            type : LIKE_POST_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type : LIKE_POST_FAILURE,\r\n            error : err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLikePost(){\r\n    yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n}\r\n\r\nfunction* watchUnlikePost(){\r\n    yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\n\r\nfunction* watchAddPost(){\r\n    yield takeEvery(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchLoadPost(){\r\n    yield takeEvery(LOAD_POST_REQUEST, loadPost);\r\n}\r\n\r\n\r\nfunction* watchRemovePost(){\r\n    yield takeEvery(REMOVE_POST_REQUEST, removePost);\r\n}\r\n\r\nfunction* watchAddComment(){\r\n    yield takeEvery(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nfunction* watchUploadImages(){\r\n    yield takeEvery(UPLOAD_IMAGES_REQUEST, uploadImages);\r\n}\r\n\r\nexport default function* postSaga(){\r\n\r\n    yield all([\r\n        fork(watchUploadImages),\r\n        fork(watchLikePost),\r\n        fork(watchUnlikePost),\r\n        fork(watchAddPost),\r\n        fork(watchLoadPost),\r\n        fork(watchRemovePost),\r\n        fork(watchAddComment),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}