{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport reducer from \"../reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport next from \"next\";\n\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  console.log(action);\n  return next(action);\n};\n\nconst configureStore = () => {\n  const sagaMiddleWare = createSagaMiddleware();\n  const middleWares = [sagaMiddleWare, loggerMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middleWares)) : composeWithDevTools(applyMiddleware(...middleWares));\n  const store = createStore(reducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["D:/nodeBird/prepare/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","compose","createStore","reducer","composeWithDevTools","createSagaMiddleware","next","loggerMiddleware","dispatch","getState","action","console","log","configureStore","sagaMiddleWare","middleWares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,oBAA5B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAA0BH,IAAD,IAAWI,MAAD,IAAW;AACnEC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,SAAOJ,IAAI,CAACI,MAAD,CAAX;AACH,CAHD;;AAKA,MAAMG,cAAc,GAAG,MAAK;AACxB,QAAMC,cAAc,GAAGT,oBAAoB,EAA3C;AACA,QAAMU,WAAW,GAAG,CAACD,cAAD,EAAiBP,gBAAjB,CAApB;AACA,QAAMS,QAAQ,GAAG,QACff,OAAO,CAACD,eAAe,CAAC,GAAGe,WAAJ,CAAhB,CADQ,GAEfX,mBAAmB,CAACJ,eAAe,CAAC,GAAGe,WAAJ,CAAhB,CAFrB;AAGA,QAAME,KAAK,GAAGf,WAAW,CAACC,OAAD,EAAUa,QAAV,CAAzB;AACA,SAAOC,KAAP;AACH,CARD;;AAUA,MAAMC,OAAO,GAAGnB,aAAa,CAACc,cAAD,EAAiB;AAC1CM,EAAAA,KAAK;AADqC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import {createWrapper} from \"next-redux-wrapper\";\r\nimport { applyMiddleware, compose, createStore } from \"redux\";\r\nimport reducer from \"../reducers\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport next from \"next\";\r\n\r\nconst loggerMiddleware = ({dispatch, getState}) =>(next) => (action) =>{\r\n    console.log(action);\r\n    return next(action);\r\n}\r\n\r\nconst configureStore = () =>{\r\n    const sagaMiddleWare = createSagaMiddleware();\r\n    const middleWares = [sagaMiddleWare, loggerMiddleware];\r\n    const enhancer = process.env.NODE_ENV === \"production\"\r\n    ? compose(applyMiddleware(...middleWares))\r\n    : composeWithDevTools(applyMiddleware(...middleWares));\r\n    const store = createStore(reducer, enhancer);\r\n    return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n    debug:process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}