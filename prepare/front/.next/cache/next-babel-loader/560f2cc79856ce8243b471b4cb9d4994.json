{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\nodeBird\\\\prepare\\\\front\\\\components\\\\PostForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button, Form, Input } from \"antd\";\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addPost, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE, ADD_POST_REQUEST } from \"../reducers/post\";\nimport useInput from \"../hooks/useInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addPostDone = _useSelector.addPostDone;\n\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  useEffect(function () {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n  var onSubmit = useCallback(function () {\n    var formData = new FormData();\n    imagePaths.forEach(function (p) {\n      formData.append(\"image\", i);\n    });\n    formData.append(\"content\", text);\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    });\n  }, [text, imagePaths]);\n  var imageInput = useRef();\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onChangeImages = useCallback(function (e) {\n    console.log(\"images\", e.target.files);\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imageFormData.append(\"image\", f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  });\n  var onRemoveImage = useCallback(function (index) {\n    return function () {\n      dispatch({\n        type: REMOVE_IMAGE,\n        data: index\n      });\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: \"10px 0 20px\"\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput,\n        onChange: onChangeImages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          \"float\": \"right\"\n        },\n        htmlType: \"submit\",\n        children: \"\\uC9F9\\uC9F9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(function (v, i) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"inline-block\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://localhost:3060/\".concat(v),\n            style: {\n              width: \"200px\"\n            },\n            art: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: onRemoveImage(i),\n              children: \"\\uC81C\\uAC70\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, _this)]\n        }, v, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostForm, \"3FK2zRZPNgg8Zyo/ctJDr8anxN0=\", false, function () {\n  return [useSelector, useDispatch, useInput];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["D:/nodeBird/prepare/front/components/PostForm.js"],"names":["Button","Form","Input","useCallback","useEffect","useRef","useState","useSelector","useDispatch","addPost","UPLOAD_IMAGES_REQUEST","REMOVE_IMAGE","ADD_POST_REQUEST","useInput","PostForm","state","post","imagePaths","addPostDone","dispatch","text","onChangeText","setText","onSubmit","formData","FormData","forEach","p","append","i","type","data","imageInput","onClickImageUpload","current","click","onChangeImages","e","console","log","target","files","imageFormData","call","f","onRemoveImage","index","margin","map","v","display","width"],"mappings":"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","sourcesContent":["import { Button, Form, Input } from \"antd\";\r\nimport { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addPost, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE, ADD_POST_REQUEST } from \"../reducers/post\";\r\nimport useInput from \"../hooks/useInput\";\r\nconst PostForm = () =>{\r\n\r\n    const {imagePaths, addPostDone} = useSelector((state) => state.post);\r\n    const dispatch = useDispatch();\r\n    const [text, onChangeText, setText] = useInput(\"\");\r\n\r\n    useEffect(() =>{\r\n        if(addPostDone){\r\n            setText(\"\");\r\n        }\r\n    }, [addPostDone]);\r\n\r\n    const onSubmit = useCallback(() =>{\r\n        const formData = new FormData();\r\n        imagePaths.forEach((p) =>{\r\n            formData.append(\"image\", i);\r\n        });\r\n        formData.append(\"content\", text);\r\n        dispatch({\r\n            type : ADD_POST_REQUEST,\r\n            data : formData,\r\n        });\r\n    }, [text, imagePaths]);\r\n\r\n    const imageInput = useRef();\r\n    const onClickImageUpload = useCallback(()=>{\r\n        imageInput.current.click();\r\n    }, [imageInput.current])\r\n\r\n    const onChangeImages = useCallback((e) =>{\r\n        console.log(\"images\", e.target.files);\r\n        const imageFormData = new FormData();\r\n        [].forEach.call(e.target.files, (f) => {\r\n            imageFormData.append(\"image\", f);\r\n        });\r\n        dispatch({\r\n            type : UPLOAD_IMAGES_REQUEST,\r\n            data : imageFormData,\r\n        });\r\n    });\r\n\r\n    const onRemoveImage = useCallback((index) => () => {\r\n        dispatch({\r\n            type : REMOVE_IMAGE,\r\n            data : index,\r\n        })\r\n    });\r\n    return(\r\n        <Form style={{margin : \"10px 0 20px\"}} encType=\"multipart/form-data\" onFinish={onSubmit}> \r\n            <Input.TextArea value={text} onChange={onChangeText} maxLength={140} placeholder=\"어떤 신기한 일이 있었나요?\"/>\r\n            <div>\r\n                <input type=\"file\" name=\"image\" multiple hidden ref={imageInput} onChange={onChangeImages}/>\r\n                <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n                <Button type=\"primary\" style={{float : \"right\"}} htmlType=\"submit\">짹짹</Button>\r\n            </div>\r\n            <div>\r\n                {imagePaths.map((v, i) =>(\r\n                    <div key ={v} style={{display:\"inline-block\"}}>\r\n                        <img src={`http://localhost:3060/${v}`} style ={{width : \"200px\"}} art={v}/>\r\n                        <div>\r\n                            <Button onClick={onRemoveImage(i)}>제거</Button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}