{"ast":null,"code":"import { all, fork, call, put, take, takeEvery, takeLatest, throttle, delay } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/api/addpost\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    //const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: \"ADD_POST_SUCCESS\",\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: \"ADD_POST_FAILURE\",\n      data: error.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeEvery(\"ADD_POST_REQUEST\", addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["D:/nodeBird/prepare/front/sagas/post.js"],"names":["all","fork","call","put","take","takeEvery","takeLatest","throttle","delay","axios","addPostAPI","data","post","addPost","action","type","result","error","response","watchAddPost","postSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,IAAb,EAAmBC,IAAnB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,SAApC,EAA+CC,UAA/C,EAA2DC,QAA3D,EAAqEC,KAArE,QAAiF,oBAAjF;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,SAASC,UAAT,CAAoBC,IAApB,EAAyB;AACrB,SAAOF,KAAK,CAACG,IAAN,CAAW,cAAX,EAA2BD,IAA3B,CAAP;AACH;;AAED,UAAUE,OAAV,CAAkBC,MAAlB,EAAyB;AACrB,MAAI;AACA;AACA,UAAMN,KAAK,CAAC,IAAD,CAAX;AACA,UAAML,GAAG,CAAC;AACNY,MAAAA,IAAI,EAAG,kBADD;AAENJ,MAAAA,IAAI,EAAGK,MAAM,CAACL;AAFR,KAAD,CAAT;AAIH,GAPD,CAOE,OAAOM,KAAP,EAAc;AACZ,UAAMd,GAAG,CAAC;AACNY,MAAAA,IAAI,EAAG,kBADD;AAENJ,MAAAA,IAAI,EAAGM,KAAK,CAACC,QAAN,CAAeP;AAFhB,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUQ,YAAV,GAAwB;AACpB,QAAMd,SAAS,CAAC,kBAAD,EAAqBQ,OAArB,CAAf;AACH;;AAED,eAAe,UAAUO,QAAV,GAAoB;AAE/B,QAAMpB,GAAG,CAAC,CACNC,IAAI,CAACkB,YAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import {all, fork, call, put, take, takeEvery, takeLatest, throttle, delay} from \"redux-saga/effects\"\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction addPostAPI(data){\r\n    return axios.post(\"/api/addpost\", data);\r\n}\r\n\r\nfunction* addPost(action){\r\n    try {\r\n        //const result = yield call(addPostAPI, action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type : \"ADD_POST_SUCCESS\",\r\n            data : result.data,\r\n        });\r\n    } catch (error) {\r\n        yield put({\r\n            type : \"ADD_POST_FAILURE\",\r\n            data : error.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchAddPost(){\r\n    yield takeEvery(\"ADD_POST_REQUEST\", addPost);\r\n}\r\n\r\nexport default function* postSaga(){\r\n\r\n    yield all([\r\n        fork(watchAddPost),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}