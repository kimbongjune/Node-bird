{"ast":null,"code":"var _jsxFileName = \"D:\\\\nodeBird\\\\prepare\\\\front\\\\components\\\\CommentForm.js\";\nimport { Form, Input, Button } from \"antd\";\nimport { useCallback, useEffect } from 'react';\nimport useInput from \"../hooks/useInput\";\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from './../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const [commentText, onChangeCommentText, setCommentText] = useInput(\"\");\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommentDone,\n    addCommentLoading\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText(\"\");\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: \"absolute\",\n          right: 0,\n          bottom: -40,\n          zIndex: 1\n        },\n        loading: addCommentLoading,\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"\\uC090\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\nCommentForm.protoType = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["D:/nodeBird/prepare/front/components/CommentForm.js"],"names":["Form","Input","Button","useCallback","useEffect","useInput","PropTypes","useSelector","useDispatch","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","commentText","onChangeCommentText","setCommentText","id","state","user","me","addCommentDone","addCommentLoading","onSubmitComment","console","log","type","data","content","postId","userId","position","right","bottom","zIndex","protoType","object","isRequired"],"mappings":";AAAA,SAAQA,IAAR,EAAcC,KAAd,EAAqBC,MAArB,QAAkC,MAAlC;AACA,SAASC,WAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,oBAApC;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAW;AAC3B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM,CAACK,WAAD,EAAcC,mBAAd,EAAmCC,cAAnC,IAAqDV,QAAQ,CAAC,EAAD,CAAnE;AACA,QAAMW,EAAE,GAAGT,WAAW,CAAEU,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;AACA,QAAM;AAAEI,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAwCd,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACN,IAAlB,CAAzD;AAEAP,EAAAA,SAAS,CAAC,MAAK;AACX,QAAGgB,cAAH,EAAkB;AACdL,MAAAA,cAAc,CAAC,EAAD,CAAd;AACH;AACJ,GAJQ,EAIN,CAACK,cAAD,CAJM,CAAT;AAMA,QAAME,eAAe,GAAGnB,WAAW,CAAC,MAAK;AAErCoB,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAI,CAACK,EAAjB,EAAqBH,WAArB;AACAD,IAAAA,QAAQ,CAAC;AACLa,MAAAA,IAAI,EAAGhB,mBADF;AAELiB,MAAAA,IAAI,EAAG;AACPC,QAAAA,OAAO,EAAGd,WADH;AAEPe,QAAAA,MAAM,EAAGjB,IAAI,CAACK,EAFP;AAGPa,QAAAA,MAAM,EAAGb;AAHF;AAFF,KAAD,CAAR;AAQH,GAXkC,EAWhC,CAACH,WAAD,EAAcG,EAAd,CAXgC,CAAnC;AAYA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEM,eAAhB;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAA,8BACI,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAET,WAAvB;AAAoC,QAAA,QAAQ,EAAEC,mBAA9C;AAAmE,QAAA,IAAI,EAAE;AAAzE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAACgB,UAAAA,QAAQ,EAAC,UAAV;AAAsBC,UAAAA,KAAK,EAAG,CAA9B;AAAiCC,UAAAA,MAAM,EAAG,CAAC,EAA3C;AAA+CC,UAAAA,MAAM,EAAG;AAAxD,SAAf;AAA2E,QAAA,OAAO,EAAEZ,iBAApF;AAAuG,QAAA,IAAI,EAAC,SAA5G;AAAsH,QAAA,QAAQ,EAAC,QAA/H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAhCD;;AAkCAX,WAAW,CAACwB,SAAZ,GAAuB;AACnBvB,EAAAA,IAAI,EAAEL,SAAS,CAAC6B,MAAV,CAAiBC;AADJ,CAAvB;AAIA,eAAe1B,WAAf","sourcesContent":["import {Form, Input, Button} from \"antd\";\r\nimport { useCallback,useEffect } from 'react';\r\nimport useInput from \"../hooks/useInput\";\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ADD_COMMENT_REQUEST } from './../reducers/post';\r\n\r\nconst CommentForm = ({post}) =>{\r\n    const dispatch = useDispatch();\r\n    const [commentText, onChangeCommentText, setCommentText] = useInput(\"\");\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    const { addCommentDone, addCommentLoading } = useSelector((state) => state.post);\r\n\r\n    useEffect(() =>{\r\n        if(addCommentDone){\r\n            setCommentText(\"\");\r\n        }\r\n    }, [addCommentDone])\r\n\r\n    const onSubmitComment = useCallback(() =>{\r\n\r\n        console.log(post.id, commentText);\r\n        dispatch({\r\n            type : ADD_COMMENT_REQUEST,\r\n            data : {\r\n            content : commentText,\r\n            postId : post.id,\r\n            userId : id,\r\n            },\r\n        });\r\n    }, [commentText, id]);\r\n    return(\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item>\r\n                <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4}/>\r\n                <Button style={{position:\"absolute\", right : 0, bottom : -40, zIndex : 1}} loading={addCommentLoading} type=\"primary\" htmlType=\"submit\">삐약</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nCommentForm.protoType ={\r\n    post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}