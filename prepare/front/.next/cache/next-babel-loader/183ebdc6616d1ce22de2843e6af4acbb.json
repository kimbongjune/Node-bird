{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport reducer from \"../reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../sagas\";\n\nvar loggerMiddleware = function loggerMiddleware(_ref) {\n  var dispatch = _ref.dispatch,\n      getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      console.log(action);\n      return next(action);\n    };\n  };\n};\n\nvar configureStore = function configureStore() {\n  var sagaMiddleWare = createSagaMiddleware();\n  var middleWares = [sagaMiddleWare, loggerMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middleWares)) : composeWithDevTools(applyMiddleware.apply(void 0, middleWares));\n  var store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleWare.run(rootSaga);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["D:/nodeBird/prepare/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","compose","createStore","reducer","composeWithDevTools","createSagaMiddleware","rootSaga","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","sagaMiddleWare","middleWares","enhancer","store","sagaTask","run","wrapper","debug"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,oBAA5B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,MAAEC,QAAF,QAAEA,QAAF;AAAA,MAAYC,QAAZ,QAAYA,QAAZ;AAAA,SAAyB,UAACC,IAAD;AAAA,WAAU,UAACC,MAAD,EAAW;AACnEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,aAAOD,IAAI,CAACC,MAAD,CAAX;AACH,KAHiD;AAAA,GAAzB;AAAA,CAAzB;;AAKA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAK;AACxB,MAAMC,cAAc,GAAGV,oBAAoB,EAA3C;AACA,MAAMW,WAAW,GAAG,CAACD,cAAD,EAAiBR,gBAAjB,CAApB;AACA,MAAMU,QAAQ,GAAG,QACfhB,OAAO,CAACD,eAAe,MAAf,SAAmBgB,WAAnB,CAAD,CADQ,GAEfZ,mBAAmB,CAACJ,eAAe,MAAf,SAAmBgB,WAAnB,CAAD,CAFrB;AAGA,MAAME,KAAK,GAAGhB,WAAW,CAACC,OAAD,EAAUc,QAAV,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBd,QAAnB,CAAjB;AACA,SAAOY,KAAP;AACH,CATD;;AAWA,IAAMG,OAAO,GAAGtB,aAAa,CAACe,cAAD,EAAiB;AAC1CQ,EAAAA,KAAK;AADqC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import {createWrapper} from \"next-redux-wrapper\";\r\nimport { applyMiddleware, compose, createStore } from \"redux\";\r\nimport reducer from \"../reducers\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas\";\r\n\r\nconst loggerMiddleware = ({dispatch, getState}) =>(next) => (action) =>{\r\n    console.log(action);\r\n    return next(action);\r\n}\r\n\r\nconst configureStore = () =>{\r\n    const sagaMiddleWare = createSagaMiddleware();\r\n    const middleWares = [sagaMiddleWare, loggerMiddleware];\r\n    const enhancer = process.env.NODE_ENV === \"production\"\r\n    ? compose(applyMiddleware(...middleWares))\r\n    : composeWithDevTools(applyMiddleware(...middleWares));\r\n    const store = createStore(reducer, enhancer);\r\n    store.sagaTask = sagaMiddleWare.run(rootSaga);\r\n    return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n    debug:process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}